plugins {
    id 'java'
    id 'io.quarkus'
    id "com.diffplug.gradle.spotless" version "3.28.1"
    id 'com.cosminpolifronie.gradle.plantuml' version '1.6.0'
}

repositories {
     mavenLocal()
     mavenCentral()
}

configurations {
    umlDoclet
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-smallrye-openapi'
    implementation 'io.quarkus:quarkus-smallrye-health'
    implementation 'io.quarkus:quarkus-mongodb-panache'
    implementation 'io.quarkus:quarkus-resteasy-jsonb'
    implementation 'io.quarkus:quarkus-rest-client'
    implementation 'io.quarkus:quarkus-vertx'
    implementation 'io.quarkus:quarkus-oidc'

    testImplementation 'io.quarkus:quarkus-junit5'

    umlDoclet "nl.talsmasoftware:umldoclet:2.0.7"
}

compileJava {
    options.compilerArgs << '-parameters'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

buildNative {
    enableHttpUrlHandler = true
}

spotless {
    format 'misc', {
        target '**/*.gradle', '**/*.properties', '**/*.md', '**/.gitignore', '**/Dockerfile*'
        indentWithSpaces(4)
        trimTrailingWhitespace()
        endWithNewline()
    }
    format 'yaml', {
        target '**/*.yaml'
        indentWithSpaces(2)
        trimTrailingWhitespace()
        endWithNewline()
    }
    java {
        googleJavaFormat()
        indentWithTabs(2)
        indentWithSpaces(4)
    }
    freshmark {
        target 'README.md'
        propertiesFile('gradle.properties')
    }
}

javadoc {
    source = sourceSets.main.allJava
    options.docletpath = configurations.umlDoclet.files.asType(List)
    options.doclet = "nl.talsmasoftware.umldoclet.UMLDoclet"
    options.addStringOption "umlImageDirectory", "docs/diagrams/out/umldoc.png"
    options.addStringOption "umlImageFormat", "png"
    options.addStringOption "failOnCyclicPackageDependencies", "true"
}

plantUml {
    render input: 'docs/diagrams/src/usecase.puml', output: 'docs/diagrams/out/usecase.png', format: 'png', withMetadata: false
    render input: 'docs/diagrams/src/scenario-uploadDocument.puml', output: 'docs/diagrams/out/scenario-uploadDocument.png', format: 'png', withMetadata: false
}
